<h1>就業実績一覧</h1>

<br>
<table>
  <thead>
    <tr>
      <th width="210" >所属</th>
      <th width="100" >氏名</th>
      <th width="60" >日付</th>
      <th width="60" >休日</th>
      <th width="60" >勤務</th>
      <th width="60" >出勤</th>
      <th width="60" >始業</th>
      <th width="60" >終業</th>
      <th width="60" >退勤</th>
      <th width="40" >休憩</th>
      <th width="80" >アラーム</th>
      <th width="120" >乖離理由</th>
      <th width="120" >備考</th>
      <th width="120" >上長確認</th>
    </tr>
  </thead>

  <tbody>
    <% @worklogs.each do |worklog| %>
      <tr>
        <td><%= worklog.dept.name %></td>
        <td><%= worklog.emp.name %></td>
        <td><%= worklog.workday.strftime("%m/%d")  %></td>
        <td><%= worklog.holidaytype.name %></td>
        <td><%= worklog.worktype.name %></td>
        <td><%= worklog.rc_start.strftime("%H:%M") %></td>
        <td><%= worklog.wk_start.strftime("%H:%M")  %></td>
        <td><%= worklog.wk_end.strftime("%H:%M")  %></td>
        <td><%= worklog.rc_end.strftime("%H:%M")  %></td>
        <td align=right ><%= worklog.rest %></td>
        <td align=center >
          <% if worklog.over_work_in_day? %>
            <font color="#ff0000">10時間超</font>
          <% end %>
        </td>
        <td><%= worklog.reason %></td>
        <td><%= worklog.comment %></td>
        <td><%= worklog.check %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<br />
<hr />
<br />
<div id="chart_div" style="border:1px solid gray; width:1200px; height:300px"></div>
<br />

<!------------------------------------------------------------------------>
<!-- AJAX API のロード -->
<script type="text/javascript" src="https://www.google.com/jsapi"></script>
<script type="text/javascript">

// Visualization API とタイムライングラフ用のパッケージのロード
google.load("visualization", "1", {packages:["timeline"]});

// Google Visualization API ロード時のコールバック関数の設定
google.setOnLoadCallback(drawChart);

// グラフ作成用のコールバック関数
function drawChart() {

	// データテーブルの作成
	var dataTable = new google.visualization.DataTable();

    dataTable.addColumn({ type: 'string', id: 'dept' });
    dataTable.addColumn({ type: 'string', id: 'name' });
    dataTable.addColumn({ type: 'date', id: 'Start' });
    dataTable.addColumn({ type: 'date', id: 'End' });
    
    for (var row in gon.graph_data){
 	      dataTable.addRow([ gon.graph_data[row][0], gon.graph_data[row][1], new Date(0, 0, 0, gon.graph_data[row][2], gon.graph_data[row][3], gon.graph_data[row][4]),  new Date(0, 0, 0, gon.graph_data[row][5], gon.graph_data[row][6], gon.graph_data[row][7]) ])
      }
    
    //dataTable.addRows(gon.graph_data)

	// グラフのオプションを設定
	var options = { title: '作業状況' };
    
	// LineChart のオブジェクトの作成
	var chart = new google.visualization.Timeline(document.getElementById('chart_div'));

	// データテーブルとオプションを渡して、グラフを描画
	chart.draw(dataTable, options);

}
</script>
